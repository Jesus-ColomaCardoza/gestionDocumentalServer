generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  IdArea                                    Int          @id(map: "area_pkey") @default(autoincrement())
  Descripcion                               String?      @db.VarChar(100)
  Activo                                    Boolean?
  CreadoEl                                  DateTime     @default(now()) @db.Timestamp(6)
  CreadoPor                                 String?      @db.VarChar(50)
  ModificadoEl                              DateTime     @default(now()) @db.Timestamp(6)
  ModificadoPor                             String?      @db.VarChar(50)
  Movimiento_Movimiento_IdAreaDestinoToArea Movimiento[] @relation("Movimiento_IdAreaDestinoToArea")
  Movimiento_Movimiento_IdAreaOrigenToArea  Movimiento[] @relation("Movimiento_IdAreaOrigenToArea")
  Usuario                                   Usuario[]
}

model Cargo {
  IdCargo       Int       @id(map: "cargo_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model Carpeta {
  IdCarpeta      Int         @id(map: "carpeta_pkey") @default(autoincrement())
  Descripcion    String?     @db.VarChar(100)
  IdCarpetaPadre Int?
  IdUsuario      Int
  Activo         Boolean
  CreadoEl       DateTime    @default(now()) @db.Timestamp(6)
  CreadoPor      String?     @db.VarChar(50)
  ModificadoEl   DateTime    @default(now()) @db.Timestamp(6)
  ModificadoPor  String?     @db.VarChar(50)
  Carpeta        Carpeta?    @relation("CarpetaToCarpeta", fields: [IdCarpetaPadre], references: [IdCarpeta], onDelete: NoAction, onUpdate: NoAction, map: "fk_carpeta_padre")
  other_Carpeta  Carpeta[]   @relation("CarpetaToCarpeta")
  Usuario        Usuario     @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_carpeta_usuario")
  Documento      Documento[]
}

model Compartido {
  IdCompartido           Int      @id(map: "compartido_pkey") @default(autoincrement())
  TipoElementoCompartido String?  @db.VarChar(50)
  IdElementoCompartido   Int
  IdUsuarioCompartido    Int
  Permisos               String?  @db.VarChar(50)
  Activo                 Boolean
  CreadoEl               DateTime @default(now()) @db.Timestamp(6)
  CreadoPor              String?  @db.VarChar(50)
  ModificadoEl           DateTime @default(now()) @db.Timestamp(6)
  ModificadoPor          String?  @db.VarChar(50)
  Usuario                Usuario  @relation(fields: [IdUsuarioCompartido], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_compartido_usuario")
}

model Documento {
  IdDocumento      Int             @id(map: "documento_pkey") @default(autoincrement())
  CodigoReferencia String?         @db.VarChar(50)
  Titulo           String?         @db.VarChar(100)
  Descripcion      String?         @db.VarChar(100)
  Folios           Int?
  FechaEmision     DateTime        @default(dbgenerated("CURRENT_DATE")) @db.Date
  UrlDocumento     String?         @db.VarChar(100)
  FormatoDocumento String?         @db.VarChar(100)
  IdTipoDocumento  Int
  IdTramite        Int
  IdUsuario        Int
  FirmaDigital     Boolean?
  IdCarpeta        Int
  Activo           Boolean?
  CreadoEl         DateTime        @default(now()) @db.Timestamp(6)
  CreadoPor        String?         @db.VarChar(50)
  ModificadoEl     DateTime        @default(now()) @db.Timestamp(6)
  ModificadoPor    String?         @db.VarChar(50)
  Carpeta          Carpeta         @relation(fields: [IdCarpeta], references: [IdCarpeta], onDelete: NoAction, onUpdate: NoAction, map: "documento_idcarpeta_fkey")
  TipoDocumento    TipoDocumento   @relation(fields: [IdTipoDocumento], references: [IdTipoDocumento], onDelete: NoAction, onUpdate: NoAction, map: "documento_idtipodocumento_fkey")
  Tramite          Tramite         @relation(fields: [IdTramite], references: [IdTramite], onDelete: NoAction, onUpdate: NoAction, map: "documento_idtramite_fkey")
  Usuario          Usuario         @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "documento_idusuario_fkey")
  RegistroFirma    RegistroFirma[]
}

model Empresa {
  IdEmpresa         Int      @id(map: "empresa_pkey") @default(autoincrement())
  Descripcion       String?  @db.VarChar(100)
  NroIdentificacion String?  @db.VarChar(50)
  Email             String?  @db.VarChar(100)
  Celular           String?  @db.VarChar(15)
  Logo              Bytes?
  Activo            Boolean
  CreadoEl          DateTime @default(now()) @db.Timestamp(6)
  CreadoPor         String?  @db.VarChar(50)
  ModificadoEl      DateTime @default(now()) @db.Timestamp(6)
  ModificadoPor     String?  @db.VarChar(50)
}

model EsquemaEstado {
  IdEsquemaEstado Int      @id(map: "esquemaestado_pkey") @default(autoincrement())
  Descripcion     String?  @db.VarChar(100)
  Activo          Boolean
  CreadoEl        DateTime @default(now()) @db.Timestamp(6)
  CreadoPor       String?  @db.VarChar(50)
  ModificadoEl    DateTime @default(now()) @db.Timestamp(6)
  ModificadoPor   String?  @db.VarChar(50)
  Estado          Estado[]
}

model Estado {
  IdEstado                       Int           @id(map: "estado_pkey") @default(autoincrement())
  Descripcion                    String?       @db.VarChar(100)
  IdEsquemaEstado                Int
  Activo                         Boolean
  CreadoEl                       DateTime      @default(now()) @db.Timestamp(6)
  CreadoPor                      String?       @db.VarChar(50)
  ModificadoEl                   DateTime      @default(now()) @db.Timestamp(6)
  ModificadoPor                  String?       @db.VarChar(50)
  EsquemaEstado                  EsquemaEstado @relation(fields: [IdEsquemaEstado], references: [IdEsquemaEstado], onDelete: NoAction, onUpdate: NoAction, map: "fk_estado_esquema")
  Tramite_Tramite_EstadoToEstado Tramite[]     @relation("Tramite_EstadoToEstado")
}

model Movimiento {
  IdMovimiento                        Int      @id(map: "movimiento_pkey") @default(autoincrement())
  IdTramite                           Int
  IdAreaOrigen                        Int
  IdAreaDestino                       Int
  FechaMovimiento                     DateTime @default(now()) @db.Timestamp(6)
  Activo                              Boolean
  CreadoEl                            DateTime @default(now()) @db.Timestamp(6)
  CreadoPor                           String?  @db.VarChar(50)
  ModificadoEl                        DateTime @default(now()) @db.Timestamp(6)
  ModificadoPor                       String?  @db.VarChar(50)
  Area_Movimiento_IdAreaDestinoToArea Area     @relation("Movimiento_IdAreaDestinoToArea", fields: [IdAreaDestino], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_destino")
  Area_Movimiento_IdAreaOrigenToArea  Area     @relation("Movimiento_IdAreaOrigenToArea", fields: [IdAreaOrigen], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_origen")
  Tramite                             Tramite  @relation(fields: [IdTramite], references: [IdTramite], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_tramite")
}

model RegistroFirma {
  IdRegistroFirma Int       @id(map: "registrofirma_pkey") @default(autoincrement())
  IdUsuario       Int
  IdDocumento     Int
  Activo          Boolean
  CreadoEl        DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor       String?   @db.VarChar(50)
  ModificadoEl    DateTime  @default(now()) @db.Timestamp(6)
  ModificadoPor   String?   @db.VarChar(50)
  Documento       Documento @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, onUpdate: NoAction, map: "fk_firma_documento")
  Usuario         Usuario   @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_firma_usuario")
}

model Rol {
  IdRol         String    @id(map: "rol_pkey") @db.VarChar(20)
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime  @default(now()) @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model TipoDocumento {
  IdTipoDocumento Int         @id(map: "tipodocumento_pkey") @default(autoincrement())
  Descripcion     String?     @db.VarChar(100)
  Activo          Boolean
  CreadoEl        DateTime    @default(now()) @db.Timestamp(6)
  CreadoPor       String?     @db.VarChar(50)
  ModificadoEl    DateTime    @default(now()) @db.Timestamp(6)
  ModificadoPor   String?     @db.VarChar(50)
  Documento       Documento[]
}

model TipoIdentificacion {
  IdTipoIdentificacion Int       @id(map: "tipoidentificacion_pkey") @default(autoincrement())
  Descripcion          String?   @db.VarChar(100)
  Activo               Boolean?
  CreadoEl             DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor            String?   @db.VarChar(50)
  ModificadoEl         DateTime  @default(now()) @db.Timestamp(6)
  ModificadoPor        String?   @db.VarChar(50)
  Usuario              Usuario[]
}

model TipoTramite {
  IdTipoTramite Int       @id(map: "tipotramite_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime  @default(now()) @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Tramite       Tramite[]
}

model TipoUsuario {
  IdTipoUsuario Int       @id(map: "tipousuario_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime  @default(now()) @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model Tramite {
  IdTramite                     Int          @id(map: "tramite_pkey") @default(autoincrement())
  Asunto                        String?      @db.VarChar(100)
  Descripcion                   String?      @db.VarChar(100)
  FechaInicio                   DateTime     @default(now()) @db.Timestamp(6)
  FechaFin                      DateTime     @default(now()) @db.Timestamp(6)
  Folios                        Int?
  IdRemitente                   Int
  IdTipoTramite                 Int
  Estado                        Int
  Activo                        Boolean
  CreadoEl                      DateTime     @default(now()) @db.Timestamp(6)
  CreadoPor                     String?      @db.VarChar(50)
  ModificadoEl                  DateTime     @default(now()) @db.Timestamp(6)
  ModificadoPor                 String?      @db.VarChar(50)
  Documento                     Documento[]
  Movimiento                    Movimiento[]
  Estado_Tramite_EstadoToEstado Estado       @relation("Tramite_EstadoToEstado", fields: [Estado], references: [IdEstado], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_estado")
  Usuario                       Usuario      @relation(fields: [IdRemitente], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_remitente")
  TipoTramite                   TipoTramite  @relation(fields: [IdTipoTramite], references: [IdTipoTramite], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_tipo")
}

model Usuario {
  IdUsuario            Int                @id(map: "usuario_pkey") @default(autoincrement())
  Nombres              String?            @db.VarChar(100)
  ApellidoPaterno      String?            @db.VarChar(50)
  ApellidoMaterno      String?            @db.VarChar(50)
  FechaNacimiento      DateTime           @default(dbgenerated("CURRENT_DATE")) @db.Date
  Email                String?            @db.VarChar(100)
  Contrasena           String?            @db.VarChar(200)
  Celular              String?            @db.VarChar(15)
  Genero               String?            @db.Char(1)
  RazonSocial          String?            @db.VarChar(100)
  IdTipoIdentificacion Int
  NroIdentificacion    String?            @db.VarChar(50)
  IdTipoUsuario        Int
  IdRol                String             @db.VarChar(20)
  IdCargo              Int
  IdArea               Int
  Activo               Boolean?
  CreadoEl             DateTime           @default(now()) @db.Timestamp(6)
  CreadoPor            String?            @db.VarChar(50)
  ModificadoEl         DateTime           @default(now()) @db.Timestamp(6)
  ModificadoPor        String?            @db.VarChar(50)
  Carpeta              Carpeta[]
  Compartido           Compartido[]
  Documento            Documento[]
  RegistroFirma        RegistroFirma[]
  Tramite              Tramite[]
  Area                 Area               @relation(fields: [IdArea], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idarea_fkey")
  Cargo                Cargo              @relation(fields: [IdCargo], references: [IdCargo], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idcargo_fkey")
  Rol                  Rol                @relation(fields: [IdRol], references: [IdRol], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idrol_fkey")
  TipoIdentificacion   TipoIdentificacion @relation(fields: [IdTipoIdentificacion], references: [IdTipoIdentificacion], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idtipoidentificacion_fkey")
  TipoUsuario          TipoUsuario        @relation(fields: [IdTipoUsuario], references: [IdTipoUsuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idtipousuario_fkey")
}
