generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Area {
  IdArea                                    Int          @id(map: "area_pkey") @default(autoincrement())
  Descripcion                               String?      @db.VarChar(100)
  Activo                                    Boolean?     @default(false)
  CreadoEl                                  DateTime     @default(now()) @db.Timestamp(6)
  CreadoPor                                 String?      @db.VarChar(50)
  ModificadoEl                              DateTime?    @db.Timestamp(6)
  ModificadoPor                             String?      @db.VarChar(50)
  Movimiento_Movimiento_IdAreaDestinoToArea Movimiento[] @relation("Movimiento_IdAreaDestinoToArea")
  Movimiento_Movimiento_IdAreaOrigenToArea  Movimiento[] @relation("Movimiento_IdAreaOrigenToArea")
  Tramite                                   Tramite[]
  Usuario                                   Usuario[]
}

model Cargo {
  IdCargo       Int       @id(map: "cargo_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model Carpeta {
  IdCarpeta      Int         @id(map: "carpeta_pkey") @default(autoincrement())
  Descripcion    String?     @db.VarChar(100)
  IdCarpetaPadre Int?
  IdUsuario      Int?
  Activo         Boolean?    @default(false)
  CreadoEl       DateTime    @default(now()) @db.Timestamp(6)
  CreadoPor      String?     @db.VarChar(50)
  ModificadoEl   DateTime?   @db.Timestamp(6)
  ModificadoPor  String?     @db.VarChar(50)
  Categoria      String?     @db.VarChar(2)
  CarpetaPadre   Carpeta?    @relation("CarpetaToCarpeta", fields: [IdCarpetaPadre], references: [IdCarpeta], onDelete: NoAction, onUpdate: NoAction, map: "fk_carpeta_padre")
  other_Carpeta  Carpeta[]   @relation("CarpetaToCarpeta")
  Usuario        Usuario?    @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_carpeta_usuario")
  Documento      Documento[]
}

model Compartido {
  IdCompartido           Int       @id(map: "compartido_pkey") @default(autoincrement())
  TipoElementoCompartido String?   @db.VarChar(50)
  IdElementoCompartido   Int?
  IdUsuarioCompartido    Int?
  Permisos               String?   @db.VarChar(50)
  Activo                 Boolean?  @default(false)
  CreadoEl               DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor              String?   @db.VarChar(50)
  ModificadoEl           DateTime? @db.Timestamp(6)
  ModificadoPor          String?   @db.VarChar(50)
  Usuario                Usuario?  @relation(fields: [IdUsuarioCompartido], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_compartido_usuario")
}

model Documento {
  IdDocumento                Int                          @id(map: "documento_pkey") @default(autoincrement())
  Titulo                     String?                      @db.VarChar(100)
  Descripcion                String?                      @db.VarChar(100)
  Folios                     Int?
  FechaEmision               DateTime                     @default(now()) @db.Timestamp(6)
  UrlDocumento               String?                      @db.VarChar(100)
  FormatoDocumento           String?                      @db.VarChar(100)
  IdTipoDocumento            Int?
  IdUsuario                  Int?
  FirmaDigital               Boolean?
  IdCarpeta                  Int?
  Activo                     Boolean?                     @default(false)
  CreadoEl                   DateTime                     @default(now()) @db.Timestamp(6)
  CreadoPor                  String?                      @db.VarChar(50)
  ModificadoEl               DateTime?                    @db.Timestamp(6)
  ModificadoPor              String?                      @db.VarChar(50)
  NombreDocumento            String?                      @db.VarChar(100)
  Categoria                  String?                      @db.VarChar(2)
  IdEstado                   Int?
  SizeDocumento              Int?
  UrlBase                    String?                      @db.VarChar(255)
  Asunto                     String?                      @db.VarChar(100)
  CodigoReferenciaDoc        String?                      @db.VarChar(50)
  Observaciones              String?                      @db.VarChar(100)
  Visible                    Boolean?
  Anexo                      Anexo[]
  Estado                     Estado?                      @relation(fields: [IdEstado], references: [IdEstado], onDelete: NoAction, onUpdate: NoAction, map: "documento_estado_fk")
  Carpeta                    Carpeta?                     @relation(fields: [IdCarpeta], references: [IdCarpeta], onDelete: NoAction, onUpdate: NoAction, map: "documento_idcarpeta_fkey")
  TipoDocumento              TipoDocumento?               @relation(fields: [IdTipoDocumento], references: [IdTipoDocumento], onDelete: NoAction, onUpdate: NoAction, map: "documento_idtipodocumento_fkey")
  Usuario                    Usuario?                     @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "documento_idusuario_fkey")
  HistorialMovimientoxEstado HistorialMovimientoxEstado[]
  Movimiento                 Movimiento[]
  RegistroFirma              RegistroFirma[]
  Tramite                    Tramite[]
}

model Empresa {
  IdEmpresa         Int       @id(map: "empresa_pkey") @default(autoincrement())
  Descripcion       String?   @db.VarChar(100)
  NroIdentificacion String?   @db.VarChar(50)
  Email             String?   @db.VarChar(100)
  Celular           String?   @db.VarChar(15)
  Activo            Boolean?  @default(false)
  CreadoEl          DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor         String?   @db.VarChar(50)
  ModificadoEl      DateTime? @db.Timestamp(6)
  ModificadoPor     String?   @db.VarChar(50)
  RazonSocial       String?   @db.VarChar(100)
  UrlBase           String?   @db.VarChar(255)
  FormatoLogo       String?   @db.VarChar(100)
  NombreLogo        String?   @db.VarChar(100)
  SizeLogo          Int?
  UrlLogo           String?   @db.VarChar(255)
}

model EsquemaEstado {
  IdEsquemaEstado Int       @id(map: "esquemaestado_pkey") @default(autoincrement())
  Descripcion     String?   @db.VarChar(100)
  Activo          Boolean?  @default(false)
  CreadoEl        DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor       String?   @db.VarChar(50)
  ModificadoEl    DateTime? @db.Timestamp(6)
  ModificadoPor   String?   @db.VarChar(50)
  Estado          Estado[]
}

model Estado {
  IdEstado                       Int                          @id(map: "estado_pkey") @default(autoincrement())
  Descripcion                    String?                      @db.VarChar(100)
  IdEsquemaEstado                Int?
  Activo                         Boolean?                     @default(false)
  CreadoEl                       DateTime                     @default(now()) @db.Timestamp(6)
  CreadoPor                      String?                      @db.VarChar(50)
  ModificadoEl                   DateTime?                    @db.Timestamp(6)
  ModificadoPor                  String?                      @db.VarChar(50)
  Documento                      Documento[]
  EsquemaEstado                  EsquemaEstado?               @relation(fields: [IdEsquemaEstado], references: [IdEsquemaEstado], onDelete: NoAction, onUpdate: NoAction, map: "fk_estado_esquema")
  HistorialMovimientoxEstado     HistorialMovimientoxEstado[]
  Tramite_Tramite_EstadoToEstado Tramite[]                    @relation("Tramite_EstadoToEstado")
}

model Movimiento {
  IdMovimiento               Int                          @id(map: "movimiento_pkey") @default(autoincrement())
  IdTramite                  Int?
  IdAreaOrigen               Int?
  IdAreaDestino              Int?
  FechaMovimiento            DateTime                     @default(now()) @db.Timestamp(6)
  Activo                     Boolean?                     @default(false)
  CreadoEl                   DateTime                     @default(now()) @db.Timestamp(6)
  CreadoPor                  String?                      @db.VarChar(50)
  ModificadoEl               DateTime?                    @db.Timestamp(6)
  ModificadoPor              String?                      @db.VarChar(50)
  Copia                      Boolean?                     @default(false)
  FirmaDigital               Boolean?                     @default(false)
  IdMovimientoPadre          Int?
  NombreResponsable          String?                      @db.VarChar(50)
  Acciones                   String?                      @db.VarChar(100)
  IdDocumento                Int?
  Indicaciones               String?                      @db.VarChar(100)
  Motivo                     String?                      @db.VarChar(50)
  HistorialMovimientoxEstado HistorialMovimientoxEstado[]
  AreaDestino                Area?                        @relation("Movimiento_IdAreaDestinoToArea", fields: [IdAreaDestino], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_destino")
  AreaOrigen                 Area?                        @relation("Movimiento_IdAreaOrigenToArea", fields: [IdAreaOrigen], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_origen")
  Tramite                    Tramite?                     @relation(fields: [IdTramite], references: [IdTramite], onDelete: NoAction, onUpdate: NoAction, map: "fk_movimiento_tramite")
  Documento                  Documento?                   @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, map: "movimiento_documento_fk")
  MovimientoPadre            Movimiento?                  @relation("MovimientoToMovimiento", fields: [IdMovimientoPadre], references: [IdMovimiento], onDelete: NoAction, map: "movimiento_movimiento_fk")
  other_Movimiento           Movimiento[]                 @relation("MovimientoToMovimiento")
}

model HistorialMovimientoxEstado {
  IdHistorialMxE    Int         @id(map: "historialmovimientoxestado_pkey") @default(autoincrement())
  IdEstado          Int?
  IdMovimiento      Int?
  FechaHistorialMxE DateTime    @default(now()) @db.Timestamp(6)
  Activo            Boolean?    @default(false)
  CreadoEl          DateTime    @default(now()) @db.Timestamp(6)
  CreadoPor         String?     @db.VarChar(50)
  ModificadoEl      DateTime?   @db.Timestamp(6)
  ModificadoPor     String?     @db.VarChar(50)
  Detalle           String?     @db.VarChar(100)
  Observaciones     String?     @db.VarChar(100)
  IdDocumento       Int?
  Documento         Documento?  @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, map: "historialmovimientoxestado_documento_fk")
  Estado            Estado?     @relation(fields: [IdEstado], references: [IdEstado], onDelete: NoAction, onUpdate: NoAction, map: "historialmovimientoxestado_estado_fk")
  Movimiento        Movimiento? @relation(fields: [IdMovimiento], references: [IdMovimiento], onDelete: NoAction, onUpdate: NoAction, map: "historialmovimientoxestado_movimiento_fk")
}

model RegistroFirma {
  IdRegistroFirma Int        @id(map: "registrofirma_pkey") @default(autoincrement())
  IdUsuario       Int?
  IdDocumento     Int?
  Activo          Boolean?   @default(false)
  CreadoEl        DateTime   @default(now()) @db.Timestamp(6)
  CreadoPor       String?    @db.VarChar(50)
  ModificadoEl    DateTime?  @db.Timestamp(6)
  ModificadoPor   String?    @db.VarChar(50)
  Documento       Documento? @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, onUpdate: NoAction, map: "fk_firma_documento")
  Usuario         Usuario?   @relation(fields: [IdUsuario], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_firma_usuario")
}

model Rol {
  IdRol         String    @id(map: "rol_pkey") @db.VarChar(20)
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model TipoDocumento {
  IdTipoDocumento Int         @id(map: "tipodocumento_pkey") @default(autoincrement())
  Descripcion     String?     @db.VarChar(100)
  Activo          Boolean?    @default(false)
  CreadoEl        DateTime    @default(now()) @db.Timestamp(6)
  CreadoPor       String?     @db.VarChar(50)
  ModificadoEl    DateTime?   @db.Timestamp(6)
  ModificadoPor   String?     @db.VarChar(50)
  Documento       Documento[]
}

model TipoIdentificacion {
  IdTipoIdentificacion Int       @id(map: "tipoidentificacion_pkey") @default(autoincrement())
  Descripcion          String?   @db.VarChar(100)
  Activo               Boolean?  @default(false)
  CreadoEl             DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor            String?   @db.VarChar(50)
  ModificadoEl         DateTime? @db.Timestamp(6)
  ModificadoPor        String?   @db.VarChar(50)
  Usuario              Usuario[]
}

model TipoTramite {
  IdTipoTramite Int       @id(map: "tipotramite_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Tramite       Tramite[]
}

model TipoUsuario {
  IdTipoUsuario Int       @id(map: "tipousuario_pkey") @default(autoincrement())
  Descripcion   String?   @db.VarChar(100)
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Usuario       Usuario[]
}

model Tramite {
  IdTramite            Int          @id(map: "tramite_pkey") @default(autoincrement())
  Descripcion          String?      @db.VarChar(100)
  FechaInicio          DateTime     @db.Timestamp(6)
  FechaFin             DateTime?    @db.Timestamp(6)
  IdRemitente          Int?
  IdTipoTramite        Int?
  Activo               Boolean?     @default(false)
  CreadoEl             DateTime     @default(now()) @db.Timestamp(6)
  CreadoPor            String?      @db.VarChar(50)
  ModificadoEl         DateTime?    @db.Timestamp(6)
  ModificadoPor        String?      @db.VarChar(50)
  IdEstado             Int?
  IdAreaEmision        Int?
  CodigoReferenciaTram String?      @db.VarChar(50)
  IdArchivador         Int?
  IdDocumento          Int?
  Detalle              String?      @db.VarChar(100)
  Movimiento           Movimiento[]
  Estado               Estado?      @relation("Tramite_EstadoToEstado", fields: [IdEstado], references: [IdEstado], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_estado")
  Remitente            Usuario?     @relation(fields: [IdRemitente], references: [IdUsuario], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_remitente")
  TipoTramite          TipoTramite? @relation(fields: [IdTipoTramite], references: [IdTipoTramite], onDelete: NoAction, onUpdate: NoAction, map: "fk_tramite_tipo")
  Archivador           Archivador?  @relation(fields: [IdArchivador], references: [IdArchivador], onDelete: NoAction, map: "tramite_archivador_fk")
  Area                 Area?        @relation(fields: [IdAreaEmision], references: [IdArea], onDelete: NoAction, map: "tramite_area_fk")
  Documento            Documento?   @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, map: "tramite_documento_fk")
}

model Usuario {
  IdUsuario             Int                 @id(map: "usuario_pkey") @default(autoincrement())
  Nombres               String?             @db.VarChar(100)
  ApellidoPaterno       String?             @db.VarChar(50)
  ApellidoMaterno       String?             @db.VarChar(50)
  FechaNacimiento       DateTime?           @db.Date
  Direccion             String?             @db.VarChar(150)
  Email                 String?             @db.VarChar(100)
  Contrasena            String?             @db.VarChar(200)
  Celular               String?             @db.VarChar(15)
  Genero                String?             @db.Char(1)
  RazonSocial           String?             @db.VarChar(100)
  IdTipoIdentificacion  Int?
  NroIdentificacion     String?             @db.VarChar(50)
  IdTipoUsuario         Int?
  IdRol                 String?             @db.VarChar(20)
  IdCargo               Int?
  IdArea                Int?
  Activo                Boolean?            @default(false)
  CreadoEl              DateTime            @default(now()) @db.Timestamp(6)
  CreadoPor             String?             @db.VarChar(50)
  ModificadoEl          DateTime?           @db.Timestamp(6)
  ModificadoPor         String?             @db.VarChar(50)
  CodigoConfirmacion    String?             @db.VarChar(100)
  UrlBase               String?             @db.VarChar(255)
  FormatoFotoPerfil     String?             @db.VarChar(100)
  NombreFotoPerfil      String?             @db.VarChar(100)
  SizeFotoPerfil        Int?
  UrlFotoPerfil         String?             @db.VarChar(255)
  CodigoConfirmacionExp DateTime?           @db.Timestamp(6)
  Carpeta               Carpeta[]
  Compartido            Compartido[]
  Documento             Documento[]
  RegistroFirma         RegistroFirma[]
  Tramite               Tramite[]
  Area                  Area?               @relation(fields: [IdArea], references: [IdArea], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idarea_fkey")
  Cargo                 Cargo?              @relation(fields: [IdCargo], references: [IdCargo], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idcargo_fkey")
  Rol                   Rol?                @relation(fields: [IdRol], references: [IdRol], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idrol_fkey")
  TipoIdentificacion    TipoIdentificacion? @relation(fields: [IdTipoIdentificacion], references: [IdTipoIdentificacion], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idtipoidentificacion_fkey")
  TipoUsuario           TipoUsuario?        @relation(fields: [IdTipoUsuario], references: [IdTipoUsuario], onDelete: NoAction, onUpdate: NoAction, map: "usuario_idtipousuario_fkey")
}

model Constante {
  IdConstante   Int       @id(map: "constante_pkey") @default(autoincrement())
  NombreTecnico String?   @db.VarChar(50)
  IdGrupo       String?   @db.VarChar(50)
  Valor         String?
  Descripcion   String?
  IdEmpresa     Int?
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
}

model Anexo {
  IdAnexo       Int        @id(map: "anexo_pkey") @default(autoincrement())
  Titulo        String?    @db.VarChar(100)
  FormatoAnexo  String?    @db.VarChar(100)
  NombreAnexo   String?    @db.VarChar(100)
  UrlAnexo      String?    @db.VarChar(100)
  SizeAnexo     Int?
  UrlBase       String?    @db.VarChar(255)
  Activo        Boolean?   @default(false)
  CreadoEl      DateTime   @default(now()) @db.Timestamp(6)
  CreadoPor     String?    @db.VarChar(50)
  ModificadoEl  DateTime?  @db.Timestamp(6)
  ModificadoPor String?    @db.VarChar(50)
  IdDocumento   Int?
  Documento     Documento? @relation(fields: [IdDocumento], references: [IdDocumento], onDelete: NoAction, map: "anexo_documento_fk")
}

model Archivador {
  IdArchivador  Int       @id(map: "archivador_pkey") @default(autoincrement())
  Ano           Int?
  Descripcion   String?   @db.VarChar(100)
  Nombre        String?   @db.VarChar(100)
  NroTramites   Int?
  Activo        Boolean?  @default(false)
  CreadoEl      DateTime  @default(now()) @db.Timestamp(6)
  CreadoPor     String?   @db.VarChar(50)
  ModificadoEl  DateTime? @db.Timestamp(6)
  ModificadoPor String?   @db.VarChar(50)
  Tramite       Tramite[]
}
